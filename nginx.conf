worker_processes  5;
daemon off;
error_log  /var/log/nginx/error.log;
pid        /var/log/nginx/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;
}

http {
  include    /opt/nginx/conf/mime.types;
  index    index.html index.htm index.php;

  upstream ethereum {
    server localhost:8545;
  }

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   /var/log/nginx/access.log  main;
  sendfile     on;
  tcp_nopush   on;

  server {
    listen       8080;
    # uncomment to use SSL/HTTPS
    #listen 443 ssl;

    server_name  localhost;

    # uncomment to use SSL/HTTPS
    # do not forget to manually generate and add these files into the container via -v flag while running "docker run"
    #ssl_certificate /etc/ssl/certs/nginx-ssl.crt;
    #ssl_certificate_key /etc/ssl/private/nginx-ssl.key;    

    location / {
       if ($request_method = OPTIONS) {
          add_header Access-Control-Allow-Origin '*' always;
          add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept' always;
          add_header Access-Control-Allow-Methods '*' always;
          return 200;
      }

      set $jsonrpc_whitelist 'eth_getTransactionByHash,eth_getTransactionReceipt,eth_sendRawTransaction';
      access_by_lua_file 'eth-jsonrpc-access.lua';
      proxy_pass http://ethereum;
      proxy_set_header Host localhost;
    }
  }

}
